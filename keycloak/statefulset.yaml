apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: keycloak
  labels:
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/service: auth
spec:
  serviceName: keycloak-headless
  replicas: 1
  updateStrategy:
    rollingUpdate: {}
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: keycloak
      app.kubernetes.io/service: auth
  template:
    metadata:
      labels:
        app.kubernetes.io/name: keycloak
        app.kubernetes.io/service: auth
    spec:
      securityContext:
        fsGroup: 1001
      containers:
      - name: keycloak
        image: keycloak
        imagePullPolicy: Always
        command:
          - bash
        args:
          - -c
          - /opt/bitnami/scripts/keycloak/setup.sh && /opt/bitnami/keycloak/bin/kc.sh build
            --cache=ispn --cache-stack=kubernetes && /opt/bitnami/keycloak/bin/kc.sh -cf /opt/bitnami/keycloak/conf/keycloak.conf
            start
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
        envFrom:
          - configMapRef:
              name: config
        env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KEYCLOAK_ADMIN_USER
          valueFrom:
            secretKeyRef:
              key: admin-username
              name: keycloak
        - name: KEYCLOAK_ADMIN
          valueFrom:
            secretKeyRef:
              key: admin-username
              name: keycloak
        - name: KEYCLOAK_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak
              key: admin-password
        - name: KEYCLOAK_MANAGEMENT_USER
          valueFrom:
            secretKeyRef:
              key: management-username
              name: keycloak
        - name: KEYCLOAK_MANAGEMENT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak
              key: management-password
        - name: KEYCLOAK_DATABASE_NAME
          valueFrom:
            secretKeyRef:
              key: database
              name: postgres
        - name: KEYCLOAK_DATABASE_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: postgres
        - name: KEYCLOAK_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: postgres
        - name: JAVA_OPTS_APPEND
          value: "-Djgroups.dns.query=keycloak-headless.$(NAMESPACE)"
        - name: KEYCLOAK_HOSTNAME
          value: "$(HOSTNAME)"
        - name: KC_HOSTNAME
          value: "$(HOSTNAME)"
        ports:
          - name: http
            containerPort: 8080
            protocol: TCP
          - name: https
            containerPort: 8443
            protocol: TCP
          - name: http-management
            containerPort: 9990
            protocol: TCP
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 300
          periodSeconds: 1
          successThreshold: 1
          timeoutSeconds: 5
          httpGet:
            path: /
            port: http
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
          httpGet:
            path: /realms/master
            port: http
        resources:
          requests:
            memory: "128M"
            cpu: "100m"
          limits:
            memory: "2048M"
            cpu: "2000m"
      restartPolicy: Always
      terminationGracePeriodSeconds: 60